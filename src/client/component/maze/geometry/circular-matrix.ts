/* eslint-disable @typescript-eslint/no-unnecessary-type-conversion */
import { type Matrix } from './maze.ts';

export const matrix: Matrix = {
  bridge: {
    pieces: 1,
    layouts: {
      0: [{ path: ['a'] }, { path: ['b'] }, { path: ['c'] }, { path: ['d'] }],
      1: [{ path: ['a'] }],
      2: [{ path: ['a'] }],
      3: [],
      4: [],
      5: [],
      6: [],
    },
    connect: { a: 'c', b: 'd', c: 'a', d: 'b', e: 'g', f: 'h', g: 'e', h: 'g' },
  },
  directions: ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'],
  pillars: ['ab', 'bc', 'cd', 'da', 'de', 'fb', 'bg', 'gd', 'bh', 'hd', 'ef'],
  wall: {
    0: { a: true, b: true, c: true, d: true },
    1: { a: true, b: true, g: true, d: true },
    2: { a: true, b: true, h: true, d: true },
    3: { e: true, f: true, b: true, c: true, d: true },
    4: { e: true, f: true, b: true, g: true, d: true },
    5: { e: true, f: true, b: true, h: true, d: true },
    6: { e: true, f: true },
  },
  opposite: {
    direction: {
      a: 'C',
      b: 'D',
      c: 'A',
      d: 'B',
      e: 'G',
      f: 'H',
      g: 'E',
      h: 'F',
    },
    facing: {
      A: 'c',
      B: 'd',
      C: 'a',
      D: 'b',
      E: 'g',
      F: 'h',
      G: 'e',
      H: 'f',
    },
  },
  straight: {
    A: ['a', 'fe', 'bd', 'gh', 'c'],
    B: ['b', 'fh', 'ca', 'ge', 'd'],
    C: ['c', 'gh', 'db', 'ef', 'a'],
    D: ['d', 'eg', 'ac', 'fh', 'b'],
    E: ['e', 'a', 'f', 'd', 'b', 'h', 'c', 'g'],
    F: ['f', 'a', 'e', 'b', 'd', 'g', 'c', 'h'],
    G: ['g', 'c', 'h', 'd', 'b', 'f', 'a', 'e'],
    H: ['h', 'c', 'g', 'b', 'd', 'e', 'a', 'f'],
  },
  rightTurn: {
    A: ['b', 'f', 'a', 'e', 'd', 'c'],
    B: ['g', 'c', 'h', 'b', 'f', 'a', 'e', 'd'],
    C: ['e', 'd', 'g', 'c', 'h', 'b', 'f', 'a'],
    D: ['f', 'a', 'e', 'd', 'g', 'c', 'h', 'b'],
    E: ['b', 'f', 'a', 'e', 'd', 'g'],
    F: ['b', 'f', 'a', 'e', 'd', 'h'],
    G: ['d', 'g', 'c', 'h', 'b', 'f', 'a', 'e'],
    H: ['a', 'e', 'd', 'g', 'c', 'h', 'b', 'f'],
  },
  leftTurn: {
    A: ['d', 'e', 'a', 'f', 'b', 'c'],
    B: ['e', 'a', 'f', 'b', 'h', 'c', 'g', 'd'],
    C: ['f', 'b', 'h', 'c', 'g', 'd', 'e', 'a'],
    D: ['h', 'c', 'g', 'd', 'e', 'a', 'f', 'b'],
    E: ['d', 'e', 'a', 'f', 'b', 'g'],
    F: ['d', 'e', 'a', 'f', 'b', 'h'],
    G: ['a', 'f', 'b', 'h', 'c', 'g', 'd', 'e'],
    H: ['b', 'h', 'c', 'g', 'd', 'e', 'a', 'f'],
  },
  move: {
    0: {
      a: { x: +0, y: +1 },
      b: { x: +1, y: +0 },
      c: { x: +0, y: -1 },
      d: { x: -1, y: +0 },
    },
    1: {
      a: { x: +0, y: +1 },
      b: { x: +1, y: +0 },
      g: { x: +0, y: -1, zone: 'down' },
      d: { x: -1, y: +0 },
    },
    2: {
      a: { x: +0, y: +1 },
      b: { x: +1, y: +0 },
      h: { x: +0, y: -1, zone: 'down' },
      d: { x: -1, y: +0 },
    },
    3: {
      e: { x: +0, y: +1, zone: 'up' },
      f: { x: +1, y: +1, zone: 'up' },
      b: { x: +1, y: +0 },
      c: { x: +0, y: -1 },
      d: { x: -1, y: +0 },
    },
    4: {
      e: { x: +0, y: +1, zone: 'up' },
      f: { x: +1, y: +1, zone: 'up' },
      b: { x: +1, y: +0 },
      g: { x: +0, y: -1, zone: 'down' },
      d: { x: -1, y: +0 },
    },
    5: {
      e: { x: +0, y: +1, zone: 'up' },
      f: { x: +1, y: +1, zone: 'up' },
      b: { x: +1, y: +0 },
      h: { x: +0, y: -1, zone: 'down' },
      d: { x: -1, y: +0 },
    },
    6: {
      e: { x: +0, y: +1, zone: 'up' },
      f: { x: +1, y: +1, zone: 'up' },
    },
  },
  preferred: {
    0: ['a', 'd'],
    1: ['a', 'd'],
    2: ['a', 'd'],
    3: ['e', 'f', 'd'],
    4: ['e', 'f', 'd'],
    5: ['e', 'f', 'd'],
    6: ['e'],
  },
  angle: {
    a: 0,
    b: 90,
    c: 180,
    d: 270,
    e: 315,
    f: 45,
    g: 90,
    h: 90,
  },
};
